package com.example.todoapp.controller;


import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.todoapp.model.dao.HistoryRepository;
import com.example.todoapp.model.dao.TodoRepository;
import com.example.todoapp.model.dto.HistoryDto;
import com.example.todoapp.model.entity.History;
import com.example.todoapp.model.entity.Todo;
import com.example.todoapp.model.form.TodoForm;
import com.google.gson.Gson;


@Controller
@RequestMapping("/todoapp")
public class indexController {
    
	//Todoエンティティ―からtodoテーブルにアクセスするDAO
	@Autowired
	private TodoRepository todoRepos;
	
	@Autowired
	private HistoryRepository historyRepos;
	
	@Autowired
	private Gson gson = new Gson();
	
	//トップページindexに遷移
	//todoテーブルからTodoエンティティ―取得→model(→フロントへ）
	@RequestMapping("/")
	public String index(Model model) {
		List<Todo> todoList = todoRepos.findAll();
		model.addAttribute("todoList", todoList);
		
		return "index";
	}
	
	@RequestMapping("addTodo")
	public String addTodo( TodoForm todoForm,  Model model) {
		
		Todo todo = new Todo();
		todo.setTodoContents(todoForm.getTodoContents());
	    todoRepos.saveAndFlush(todo);
	    
	    return "redirect:/todoapp/";
	}
	
	@ResponseBody
	@PostMapping("/api/deleteTodo")
	public String deleteTodo(@RequestBody TodoForm todoForm, Model model) {
		try {
			todoRepos.deleteById(todoForm.getId());
		} catch (IllegalArgumentException e){
			return "-1";
		}
		
		return "1";
	}
	
	@ResponseBody
	@PostMapping("/api/doneTodo")
	public String historyApi(@RequestBody HistoryForm form) {
		long todoId = form.getId();
		List<History> history = historyRepos.findHistory(Long.parseLong(todoId));
		List<HistoryDto> historyDtoList = new ArrayList<>();
		history.forEach((v) -> {
			HistoryDto dto = new HistoryDto(v);
			historyDtoList.add(dto);
			
		});
		return gson.toJson(historyDtoList);
		}
}
